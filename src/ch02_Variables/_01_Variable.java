package ch02_Variables;

//  < 변수와 메모리(RAM) >
//  변수란, 하나의 값을 저장할 수 있는 "메모리 공간"이다.
//  자세히 보면 RAM 은 여러 개의 칩으로 나뉘어 있지만 논리적으로는 연속된 공간들이 붙어 있는 것이다.
//  각각의 저장 공간은 1byte 단위로 나누고, 각 저장 공간에 메모리 주소값이 있다.
//  원래 메모리에 값을 저장하거나 읽어올 때 메모리 주소를 이용해야 하는데, 메모리주소는 일련의 숫자로 이루어져 사람이 일일히 기억하기 힘들다.
//  그래서 특정 메모리 영역에 이름을 붙이고, 메모리 주소 대신에 이 이름을 이용해 메모리에 값을 저장하고 읽을 수 있게 하는 것이 변수이다.
//  즉, 변수에 부여된 이름은 해당 메모리 주소(숫자) 자체이며, 그 주소를 개발자가 다루기 쉽도록 대신하게 하는 것일 뿐이다.
//  변수를 선언하게 되면 어떤 값, 즉 data 를 저장할 공간을 마련하게 된다.
//  이 변수명 앞에 변수의 타입을 적게 되는데, 타입이 어떻게 되냐에 따라 메모리에 할당할 공간의 크기가 달라지게 된다.


//  여러 개의 변수를 선언할 때, 변수들이 모두 같은 타입일 경우 타입을 한 번만 선언하고 , 콤마 구분자로 구분하기만 해도 된다.

        //  int x = 0, y = 5;

        //  int x = 0;
        //  int y = 5;


//  <지역 변수는 반드시 초기화를 해주어야 한다.>
//  변수는 클래스 변수, 인스턴스 변수, 지역 변수가 있는데, 클래스 변수와 인스턴스 변수는 초기화를 하지 않아도
//  기본 초기값이 자동으로 들어가지만, 지역 변수의 경우에는 자동으로 초기화되지 않기 때문에 반드시 초기화 해주어야 한다.
//  지역 변수를 선언할 때 초기화를 해주지 않으면 컴파일 에러가 발생한다.


//  기본형 변수는 실제 값, 즉 리터럴을 저장하고
//  참조형 변수는 객체가 저장된 메모리 주소를 저장한다.


//  기본형 타입 중 숫자 타입의 경우 부호 비트가 있는데, 부호 비트의 값이 0 이면 양수이고, 부호 비트의 값이 1이면 음수이다.



public class _01_Variable {
}
