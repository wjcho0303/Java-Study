package ch02_Variables;

// 정수형의 Overflow :  최댓값에서 숫자가 1 더 증가하는 순간 최소값이 되는 현상 또는
//                    최솟값에서 숫자를 1 감소하는 순간 최댓값이 되는 현상

// 0 ~ 9999 까지만 표현이 가능한 계수기를 생각해보자.
// 계수기 버튼을 눌러서 숫자를 1씩 올리다가 9999에서 버튼을 누르면 어떻게 될까?
// 계수기는 숫자 칸이 4개밖에 없기 때문에 0000 으로 바뀔 것이다.
// 이와 같이 표현이 가능한 범위를 벗어날 때 Overflow 가 발생한다
// 프로그램에서 Overflow 는 에러들 중의 하나로, 심각한 문제이다.


// 이제 bit 의 세계로 이동해서 생각해보자. bit 니까 2진법이다.
// 4bit 를 이용하여 부호 없는 정수를 표현한다고 하자. 그럼 표현 범위는 0 ~ 15 가 될 것이다.
// 부호가 있는 정수를 표현한다면? 범위는 -8 ~ 7 이 될 것이다.

// Java 에서는 실제로 정수 타입의 최댓값 또는 최솟값에 숫자를 더하면 오버플로우 현상이 발생한다.

public class _07_Overflow {
    public static void main(String[] args) {
        short sMin = -32768;
        short sMax = 32767;

        System.out.println("sMin - 1 = " + (short)(-32768 - 1));   // 32767
        System.out.println("sMax + 1 = " + (short)(32767 + 1));    // -32768
    }
}
